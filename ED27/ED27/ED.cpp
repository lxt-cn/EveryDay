#pragma once

#include <iostream>
using namespace std;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
两个编程题：
	1>、不用加减乘除做加法
	2>、三角形
*/
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*

1. 标题：不用加减乘除做加法 | 时间限制：1秒 | 内存限制：32768K 
	写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。

*/
/*
【解题思路】：数字的相加可以转换为二进制的加法，注意每一位相加与进位即可
	两个数异或：相当于每一位相加，而不考虑进位；
*/
class Solution {
public:  
	int Add(int num1, int num2)
	{
		while (num2 != 0)
		{
			int sum = num1 ^ num2;              //得到相加后不包含进位的数据        
			int carray = (num1 & num2) << 1;    //得到两数相加的进位        
			num1 = sum;                         //两个结果相加，直到进位为0         
			num2 = carray;    
		}      
		return num1;
	} 
};

void ED01()
{
	Solution s;
	int a = 0;
	int b = 0;
	while (cin >> a >> b)
	{
		int ret = s.Add(a, b);
		cout << ret << endl;
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*

2. 标题：三角形 | 时间限制：1秒 | 内存限制：32768K 
	给定三条边，请你判断一下能不能组成一个三角形。 
	
	输入描述： 
		输入包含多组数据，每组数据包含三个正整数a、b、c（1≤a, b, c≤10^100）。 
	输出描述： 
		对应每一组数据，如果它们能组成一个三角形，则输出“Yes”；否则，输出“No”。 
		
	示例1:
		输入 
			1 2 3 
			2 2 2
		输出
			No 
			Yes

*/

// 三角形的组成条件：任意两边相加大于第三边

#define ADD(x, y) ((x)+(y))
#define CMP(x, y) ((x) > (y)) 

void ED02()
{
	double a, b, c;
	while (cin >> a >> b >> c)
	{
		//对两边进行求和与第三遍进行比较       
		if (CMP(ADD(a, b), c) && CMP(ADD(b, c), a) && CMP(ADD(a, c), b))
		{
			cout << "Yes" << endl;
		}
		else
		{
			cout << "No" << endl;
		}
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int main()
{
	//ED01();
	ED02();
	return 0;
}